!SESSION 2021-06-01 15:07:33.190 -----------------------------------------------
eclipse.buildId=4.19.0.I20210303-1800
java.version=11.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\Users\User\eclipse-workspace\.metadata\.bak_1.log
Created Time: 2021-06-01 15:17:52.635

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.636
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Path.<init>(Path.java:86)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.drawGear(GearAnimator.java:905)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.paintGear(GearAnimator.java:815)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.paint(GearAnimator.java:683)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.doPaint(AnimatedCanvas.java:301)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$3.paintControl(AnimatedCanvas.java:95)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:234)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:1529)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4817)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.openModal(AnimatedShell.java:84)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:66)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.636
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Path.<init>(Path.java:86)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.drawGear(GearAnimator.java:905)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.paintGear(GearAnimator.java:815)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.paint(GearAnimator.java:683)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.doPaint(AnimatedCanvas.java:301)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$3.paintControl(AnimatedCanvas.java:95)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:234)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:1529)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4817)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.openModal(AnimatedShell.java:84)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:66)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.637
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Path.<init>(Path.java:86)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.drawGear(GearAnimator.java:905)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.paintGear(GearAnimator.java:815)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.paint(GearAnimator.java:683)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.doPaint(AnimatedCanvas.java:301)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$3.paintControl(AnimatedCanvas.java:95)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:234)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:1529)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4817)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.openModal(AnimatedShell.java:84)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:66)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.637
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Path.<init>(Path.java:86)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.drawGear(GearAnimator.java:905)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.paintGear(GearAnimator.java:815)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.paint(GearAnimator.java:683)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.doPaint(AnimatedCanvas.java:301)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$3.paintControl(AnimatedCanvas.java:95)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:234)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:1529)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4817)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.openModal(AnimatedShell.java:84)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:66)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.637
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:113)
	at org.eclipse.swt.graphics.GC.<init>(GC.java:167)
	at org.eclipse.swt.graphics.GC.<init>(GC.java:135)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.setSelection(GearAnimator.java:372)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$Page.doAnswer(GearAnimator.java:1252)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$Page.onMouseDown(GearAnimator.java:1194)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.onMouseDown(GearAnimator.java:569)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.onMouseDown(AnimatedCanvas.java:254)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$7.mouseDown(AnimatedCanvas.java:135)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:196)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.openModal(AnimatedShell.java:84)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:66)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.638
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:205)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.setSelection(GearAnimator.java:371)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$Page.doAnswer(GearAnimator.java:1252)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$Page.onMouseDown(GearAnimator.java:1194)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.onMouseDown(GearAnimator.java:569)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.onMouseDown(AnimatedCanvas.java:254)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$7.mouseDown(AnimatedCanvas.java:135)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:196)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.openModal(AnimatedShell.java:84)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:66)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.638
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:113)
	at org.eclipse.swt.graphics.GC.<init>(GC.java:167)
	at org.eclipse.swt.graphics.GC.<init>(GC.java:135)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.setSelection(GearAnimator.java:372)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$Page.doAnswer(GearAnimator.java:1252)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$Page.onMouseDown(GearAnimator.java:1194)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.onMouseDown(GearAnimator.java:569)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.onMouseDown(AnimatedCanvas.java:254)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$7.mouseDown(AnimatedCanvas.java:135)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:196)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.openModal(AnimatedShell.java:84)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:66)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.639
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:205)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.setSelection(GearAnimator.java:371)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$Page.doAnswer(GearAnimator.java:1252)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$Page.onMouseDown(GearAnimator.java:1194)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.onMouseDown(GearAnimator.java:569)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.onMouseDown(AnimatedCanvas.java:254)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$7.mouseDown(AnimatedCanvas.java:135)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:196)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.openModal(AnimatedShell.java:84)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:66)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.639
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:208)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.639
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:207)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.640
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:206)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.640
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:205)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.641
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:204)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.641
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:199)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.641
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:198)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.642
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:196)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.642
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:195)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.642
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:193)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.643
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:192)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.643
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:190)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.644
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:189)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.644
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:187)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.644
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:186)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.645
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:185)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.645
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Font.<init>(Font.java:111)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.createFont(AnimatedCanvas.java:458)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.createFont(AnimatedCanvas.java:432)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:183)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.645
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Font.<init>(Font.java:111)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.createFont(AnimatedCanvas.java:458)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.createFont(AnimatedCanvas.java:432)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:182)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.646
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Font.<init>(Font.java:111)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.createFont(AnimatedCanvas.java:458)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:181)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.646
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Font.<init>(Font.java:111)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.createFont(AnimatedCanvas.java:458)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:180)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.647
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Font.<init>(Font.java:111)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.createFont(AnimatedCanvas.java:458)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:179)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.647
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Font.<init>(Font.java:111)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.init(AnimatedCanvas.java:378)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:176)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.647
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.doLoadImage(GearAnimator.java:1352)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.<init>(GearAnimator.java:1315)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1374)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1382)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:237)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.648
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.doLoadImage(GearAnimator.java:1352)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.<init>(GearAnimator.java:1314)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1374)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1382)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:237)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.648
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.doLoadImage(GearAnimator.java:1352)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.<init>(GearAnimator.java:1315)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1374)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:236)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.648
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.doLoadImage(GearAnimator.java:1352)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.<init>(GearAnimator.java:1314)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1374)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:236)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.649
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.doLoadImage(GearAnimator.java:1352)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.<init>(GearAnimator.java:1315)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1374)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1382)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:235)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.649
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.doLoadImage(GearAnimator.java:1352)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.<init>(GearAnimator.java:1315)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1374)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1382)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:234)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.650
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.doLoadImage(GearAnimator.java:1352)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.<init>(GearAnimator.java:1314)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1374)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1382)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:234)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.650
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.doLoadImage(GearAnimator.java:1352)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.<init>(GearAnimator.java:1315)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1374)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1382)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:233)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.650
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.doLoadImage(GearAnimator.java:1352)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.<init>(GearAnimator.java:1314)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1374)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1382)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:233)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.651
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.doLoadImage(GearAnimator.java:1352)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.<init>(GearAnimator.java:1315)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1374)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1382)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:232)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.651
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.doLoadImage(GearAnimator.java:1352)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.<init>(GearAnimator.java:1314)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1374)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$PreferencePage.<init>(GearAnimator.java:1382)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:232)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.651
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.doLoadImage(GearAnimator.java:1352)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator$ImagePage.<init>(GearAnimator.java:1314)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:231)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.652
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:214)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.652
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:213)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.653
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:212)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.653
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:211)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-01 15:17:52.653
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas$Animator.loadImage(AnimatedCanvas.java:406)
	at org.eclipse.oomph.setup.ui.questionnaire.GearAnimator.init(GearAnimator.java:210)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedCanvas.addAnimator(AnimatedCanvas.java:165)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.init(GearShell.java:149)
	at org.eclipse.oomph.setup.ui.questionnaire.AnimatedShell.<init>(AnimatedShell.java:53)
	at org.eclipse.oomph.setup.ui.questionnaire.GearShell.<init>(GearShell.java:48)
	at org.eclipse.oomph.setup.ui.questionnaire.QuestionnaireImpl$1.run(QuestionnaireImpl.java:65)
	at org.eclipse.oomph.ui.UIUtil$6.run(UIUtil.java:620)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)
!SESSION 2021-06-02 11:30:26.090 -----------------------------------------------
eclipse.buildId=4.19.0.I20210303-1800
java.version=11.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-02 11:30:32.184
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-02 11:30:32.184
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@27fc0217,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e993715,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.core.runtime 4 0 2021-06-02 11:30:37.808
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:206)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:239)
	at org.eclipse.jface.resource.URLImageDescriptor.access$2(URLImageDescriptor.java:231)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:687)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:274)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:227)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:218)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:196)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jface 4 0 2021-06-02 11:30:37.811
!MESSAGE Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve(PlatformURLPluginConnection.java:73)
	at org.eclipse.core.internal.boot.PlatformURLHandler.openConnection(PlatformURLHandler.java:69)
	at org.eclipse.osgi.internal.url.URLStreamHandlerProxy.openConnection(URLStreamHandlerProxy.java:123)
	at java.base/java.net.URL.openConnection(URL.java:1051)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:34)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:261)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:243)
	at org.eclipse.jface.resource.URLImageDescriptor.access$2(URLImageDescriptor.java:231)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:687)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:274)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:227)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:218)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:196)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.core.runtime 4 0 2021-06-02 11:30:37.813
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:206)
	at org.eclipse.jface.resource.URLImageDescriptor.getStream(URLImageDescriptor.java:166)
	at org.eclipse.jface.resource.URLImageDescriptor.getImageData(URLImageDescriptor.java:134)
	at org.eclipse.jface.resource.URLImageDescriptor.access$3(URLImageDescriptor.java:132)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageDataProvider.getImageData(URLImageDescriptor.java:78)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImageDataAtZoom(DPIUtil.java:404)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:732)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:282)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:227)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:218)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:196)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jface 2 0 2021-06-02 11:30:37.815
!MESSAGE The image could not be loaded: URLImageDescriptor(platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif)
!STACK 0
org.eclipse.jface.resource.DeviceResourceException: Unable to create resource URLImageDescriptor(platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:229)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:218)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:196)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.egit.ui 2 0 2021-06-02 11:30:38.969
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\User'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-06-03 09:32:47.760 -----------------------------------------------
eclipse.buildId=4.19.0.I20210303-1800
java.version=11.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-03 09:32:53.706
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-03 09:32:53.706
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@12e2f5ab,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4e61a863,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.core.runtime 4 0 2021-06-03 09:32:59.268
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:206)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:239)
	at org.eclipse.jface.resource.URLImageDescriptor.access$2(URLImageDescriptor.java:231)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:687)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:274)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:227)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:218)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:196)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jface 4 0 2021-06-03 09:32:59.271
!MESSAGE Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve(PlatformURLPluginConnection.java:73)
	at org.eclipse.core.internal.boot.PlatformURLHandler.openConnection(PlatformURLHandler.java:69)
	at org.eclipse.osgi.internal.url.URLStreamHandlerProxy.openConnection(URLStreamHandlerProxy.java:123)
	at java.base/java.net.URL.openConnection(URL.java:1051)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:34)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:261)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:243)
	at org.eclipse.jface.resource.URLImageDescriptor.access$2(URLImageDescriptor.java:231)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:687)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:274)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:227)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:218)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:196)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.core.runtime 4 0 2021-06-03 09:32:59.273
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:206)
	at org.eclipse.jface.resource.URLImageDescriptor.getStream(URLImageDescriptor.java:166)
	at org.eclipse.jface.resource.URLImageDescriptor.getImageData(URLImageDescriptor.java:134)
	at org.eclipse.jface.resource.URLImageDescriptor.access$3(URLImageDescriptor.java:132)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageDataProvider.getImageData(URLImageDescriptor.java:78)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImageDataAtZoom(DPIUtil.java:404)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:732)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:282)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:227)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:218)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:196)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jface 2 0 2021-06-03 09:32:59.275
!MESSAGE The image could not be loaded: URLImageDescriptor(platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif)
!STACK 0
org.eclipse.jface.resource.DeviceResourceException: Unable to create resource URLImageDescriptor(platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:229)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:218)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:196)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:765)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:730)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:714)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.egit.ui 2 0 2021-06-03 09:33:00.395
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\User'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-06-03 13:23:34.903 -----------------------------------------------
eclipse.buildId=4.19.0.I20210303-1800
java.version=11.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-03 13:23:40.469
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-03 13:23:40.469
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@27fc0217,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e993715,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-06-03 13:23:46.758
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\User'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-06-04 09:14:22.280 -----------------------------------------------
eclipse.buildId=4.19.0.I20210303-1800
java.version=11.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-04 09:14:30.430
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-04 09:14:30.430
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35f01759,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2fea9a7b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-06-04 09:14:37.979
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\User'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:46:24.539
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 14:46:24.541
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 14:46:24.543
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:46:24.570
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:46:24.572
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:46:24.572
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:46:25.504
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:46:25.506
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:46:25.507
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:46:33.598
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 14:46:33.599
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 14:46:33.599
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:46:33.625
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:46:33.626
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:46:33.627
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:46:41.630
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> , int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 14:46:41.632
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 14:46:41.632
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:46:41.656
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> , int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:46:41.657
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:46:41.657
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:46:51.197
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 14:46:51.198
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 14:46:51.198
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:46:51.225
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:46:51.226
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:46:51.227
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:47:09.160
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:47:09.161
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:47:09.162
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:47:09.227
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:47:09.228
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:47:09.229
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:47:14.818
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:47:14.819
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:47:14.820
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:47:18.272
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> , int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 14:47:18.274
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 14:47:18.275
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:47:18.303
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> , int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:47:18.305
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:47:18.305
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:47:21.312
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 14:47:21.313
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 14:47:21.314
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:47:21.343
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:47:21.344
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:47:21.345
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:01.532
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> input,totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 14:48:01.533
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 14:48:01.534
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:01.559
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> input,totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:48:01.560
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:48:01.561
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:03.564
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> input,totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 14:48:03.566
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 14:48:03.567
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:03.599
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> input,totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:48:03.601
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:48:03.602
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:04.435
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> input,  totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:48:04.436
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:48:04.437
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:05.092
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> input, totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:48:05.094
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:48:05.094
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:05.105
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> input, totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 14:48:05.106
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 14:48:05.107
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:08.174
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> input, totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:48:08.175
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:48:08.176
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:34.243
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 14:48:34.244
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 14:48:34.245
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:34.273
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double> int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:48:34.275
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:48:34.275
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:35.271
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 14:48:35.272
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 14:48:35.273
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:35.302
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:48:35.302
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:48:35.303
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:49.221
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:48:49.222
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:48:49.223
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:48:54.145
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:48:54.147
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:48:54.148
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:49:06.956
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(ArrayList<double>, int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      
		      myWriter.write("Turn, Time \n");
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    myWriter.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:49:06.957
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:49:06.957
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:55:39.632
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(double input[], int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		    std::ofstream csv();
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      ("Files in Java might be tricky, but it is fun enough!");
		      myWriter.close();

		    csv<<"Turn, Time \n";
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    csv.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 14:55:39.633
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 14:55:39.634
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:55:39.660
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(double input[], int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		    std::ofstream csv();
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      ("Files in Java might be tricky, but it is fun enough!");
		      myWriter.close();

		    csv<<"Turn, Time \n";
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    csv.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:55:39.662
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:55:39.662
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:55:46.725
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(double input[], int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		    std::ofstream csv();
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      ("Files in Java might be tricky, but it is fun enough!");
		      myWriter.close();

		    csv<<"Turn, Time \n";
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    csv.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:55:46.727
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:55:46.728
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:55:48.601
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(double input[], int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		    std::ofstream csv();
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      ("Files in Java might be tricky, but it is fun enough!");
		      myWriter.close();

		    csv<<"Turn, Time \n";
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    csv.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:326)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:584)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:653)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:443)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1270)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1042)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1094)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1519)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4882)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4760)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:55:48.603
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:326)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:584)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:653)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:443)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1270)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1042)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1094)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1519)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4882)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4760)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:55:48.605
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:326)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:584)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:653)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:443)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1270)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1042)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1094)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1519)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4882)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4760)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 14:55:50.894
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

import java.io.FileWriter;
import java.util.ArrayList;

//ALL C++ CODE RIGHT NOW.  NEEDS SOME REFACTORING!!!
public class KonaneParallel {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */



		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */




		void write_csv(double input[], int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>
			int k;
		    std::ofstream csv();
		      FileWriter myWriter = new FileWriter("parallel-moves-14-1.csv");
		      ("Files in Java might be tricky, but it is fun enough!");
		      myWriter.close();

		    csv<<"Turn, Time \n";
		    for(int i=0;i<totalMoves;i++){
		    	k=i+1;
		    	myWriter.write(k+","+input[i]+"\n");
		    }


		    // Close the file
		    csv.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    ArrayList<Double> csv = new ArrayList<Double>();
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return;

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 14:55:50.896
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 14:55:50.896
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 15:04:13.590
!MESSAGE JavaBuilder handling CoreException while building: KonaneJava
!STACK 1
org.eclipse.core.runtime.CoreException: release 15 is not found in the system
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.initialize(ClasspathJrtWithReleaseOption.java:120)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:82)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:146)
	at org.eclipse.jdt.internal.core.builder.NameEnvironment.computeClasspathLocations(NameEnvironment.java:313)
	at org.eclipse.jdt.internal.core.builder.NameEnvironment.<init>(NameEnvironment.java:62)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.initializeBuilder(JavaBuilder.java:643)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:181)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:846)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:229)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:277)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:330)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:333)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:385)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:406)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.lang.IllegalArgumentException: release 15 is not found in the system
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.initialize(ClasspathJrtWithReleaseOption.java:119)
	... 18 more
!SUBENTRY 1 org.eclipse.jdt.core 4 0 2021-06-04 15:04:13.591
!MESSAGE release 15 is not found in the system
!STACK 0
java.lang.IllegalArgumentException: release 15 is not found in the system
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.initialize(ClasspathJrtWithReleaseOption.java:119)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:82)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:146)
	at org.eclipse.jdt.internal.core.builder.NameEnvironment.computeClasspathLocations(NameEnvironment.java:313)
	at org.eclipse.jdt.internal.core.builder.NameEnvironment.<init>(NameEnvironment.java:62)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.initializeBuilder(JavaBuilder.java:643)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:181)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:846)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:229)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:277)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:330)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:333)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:385)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:406)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 15:04:50.747
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

public class Konane {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */
		#include "myincludes.h"

		//Includes for parallel processing
		#include "parallelincludes.h"

		/*Include Constants, depth is defined at compile time, as are some*/
		#include "const.h"


		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		#include "board.cpp"
		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */
		class player{
		public:
		    void wargamesReference();
		};

		void player::wargamesReference()
		{
		    int jokes;
		    std::cout << "Would you like to play a game? \n";
			std::cout << "1. Konane \n2. ALSO Konane\n3. Global Thermonuclear War (Obligatory Wargames Reference)\n";
			std::cin >> jokes;
			if (jokes == 3) {
				std::cout << "That game is SOOOOOOOO boring,let's play Konane!!!\n";
			}
		}


		void write_csv(double input[], int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>

		    std::ofstream csv("parallel-moves-14-1.csv");
		    csv<<"Turn, Time \n";
		    for(int i=0;i<totalMoves;i++){
		        csv<<i+1<<","<<input[i]<<"\n";
		    }


		    // Close the file
		    csv.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

		int main() {
			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    double csv[50];
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return 0;
		}



	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-04 15:04:50.748
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-04 15:04:50.749
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 15:04:50.780
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

public class Konane {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */
		#include "myincludes.h"

		//Includes for parallel processing
		#include "parallelincludes.h"

		/*Include Constants, depth is defined at compile time, as are some*/
		#include "const.h"


		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		#include "board.cpp"
		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */
		class player{
		public:
		    void wargamesReference();
		};

		void player::wargamesReference()
		{
		    int jokes;
		    std::cout << "Would you like to play a game? \n";
			std::cout << "1. Konane \n2. ALSO Konane\n3. Global Thermonuclear War (Obligatory Wargames Reference)\n";
			std::cin >> jokes;
			if (jokes == 3) {
				std::cout << "That game is SOOOOOOOO boring,let's play Konane!!!\n";
			}
		}


		void write_csv(double input[], int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>

		    std::ofstream csv("parallel-moves-14-1.csv");
		    csv<<"Turn, Time \n";
		    for(int i=0;i<totalMoves;i++){
		        csv<<i+1<<","<<input[i]<<"\n";
		    }


		    // Close the file
		    csv.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

		int main() {
			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    double csv[50];
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return 0;
		}



	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-04 15:04:50.781
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-04 15:04:50.782
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.ui.ide 4 4 2021-06-04 15:04:51.032
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:728)
	at org.eclipse.swt.dnd.TreeDragSourceEffect.getDragSourceImage(TreeDragSourceEffect.java:149)
	at org.eclipse.swt.dnd.TreeDragSourceEffect.dragStart(TreeDragSourceEffect.java:81)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:36)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:475)
	at org.eclipse.swt.dnd.DragSource.lambda$0(DragSource.java:380)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.dialogs.PropertyDialogAction.run(PropertyDialogAction.java:153)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-04 15:04:58.788
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.konane.java;

public class Konane {

	public static void main(String[] args) {
		/*Order of Game Play*/
		/*Game is lost when there are no longer any valid moves.*/
				/* 1. determine who plays Black and is thus first.
				 * 2. choose to remove 2 pieces if not first (another variant has the removal of one piece by each player).
				 *
				 *     **GAME LOOP**    *
				 * 3. wait for input or make input
				 * 4. upon AI move:

				 * run legalmove on each position in array when is turn (and board is accurate.)
				 * N,S,E,W determines legalmove direction.
				 *
				 * the following bounds due to no move possible:
				 * if i<2 (row) don't run N
				 * if i>5 don't run S,
				 *
				 * if j<2 (column) don't run W,
				 * if j>5 don't run E.
				 *
				 * so the first square in a column doesn't evaluate the Northern most move and the last square will not
				 * evaluate the Southernmost... etc
				 * ******************* RECURSIVE CALLS  ***************************
				 * 5. if legalmove returns true, form node (recursive call with new board) with move and repeat process board to obtain number.
				 * it is a DFS.
				 * 6. the calls eventually reach depth d and the SEF is run.  It is notable that the alpha and beta cutoffs will reduce the number of boards evaluated
				 * WITHOUT any data loss.
				 * (this is a less intuitive action of the recursive function, no data is lost, but branches that the AI will NEVER select are not explored further.
				 * essentially, a node which comes out too high or too low relative to the node examined will not be selected)
				 *
				 **************	State Evaluation function (SEF)*********************
				 *
				 * 7. The SEF evaluates partly by counting legal moves for player in that state.
				 * Additionally, it counts pieces and estimates based on expected piece balance (each move must remove one piece, if more pieces are missing a
				 * double move has occurred.  The SEF assumes that this is bad for the player who had this happen to it.)
				 *
				 * The SEF value is passed up to the top of the tree with varied modifications, minimizing levels take the lowest value to pass, maximizing
				 * will take up the largest values
				 *
				 * Dir can = 0 for N (up), 1 for E(right), 2 for S (down), 3 for W (left)
				 */



		/* STANDARD INCLUDES FROM LIBRARY FILES AND NAMESPACE */
		#include "myincludes.h"

		//Includes for parallel processing
		#include "parallelincludes.h"

		/*Include Constants, depth is defined at compile time, as are some*/
		#include "const.h"


		/**REMEMBER TO USE THE DIAGNOSTIC PRINTOUTS FOR FUTURE CHANGES**/


		/**FUNCTIONAL WITH 16 DEPTH, EASE OF TESTING AT 14 OR 12 DEPTH, GAMEPLAY IS DIFFERENT DEPENDING ON DEPTH**/

		/**color is AI, humanColor is opponent**/

		/***MUST HAVE THESE GLOBALS, COULD PERHAPS EDIT INTO BOARD?***/
		int AIcolor, humanColor;

		#include "board.cpp"
		/******************DUE TO FOLLOWING OFFICIAL RULES, COLOR HAS BEEN MERGED WITH FIRST**********************/
		/***(setters and getters, removed from code at this time)***/
		/*int getFirst(){return first;}
		 *int getColor() {return AIcolor;}
		 *int getPlayerColor() {return playerColor;}
		 */
		class player{
		public:
		    void wargamesReference();
		};

		void player::wargamesReference()
		{
		    int jokes;
		    std::cout << "Would you like to play a game? \n";
			std::cout << "1. Konane \n2. ALSO Konane\n3. Global Thermonuclear War (Obligatory Wargames Reference)\n";
			std::cin >> jokes;
			if (jokes == 3) {
				std::cout << "That game is SOOOOOOOO boring,let's play Konane!!!\n";
			}
		}


		void write_csv(double input[], int totalMoves){

		    // Make a CSV file with move record for stat tracking
		    // Each column of data is represented by the pair <column name, column data>

		    std::ofstream csv("parallel-moves-14-1.csv");
		    csv<<"Turn, Time \n";
		    for(int i=0;i<totalMoves;i++){
		        csv<<i+1<<","<<input[i]<<"\n";
		    }


		    // Close the file
		    csv.close();
		}



		/**TODO:: TOO MUCH IN MAIN!! REFACTOR!!**/

		int main() {
			int Dir = 0;
			int level=0;
			int turn=0;
			int i,j,k,m,z, alpha, beta, state;
			double tc;
			//for recording time
		    double csv[50];
		    duration<double> timeCount;

		    //who is first, whose turn is it, is it zero player,is the human player making a legal move?
			bool first, AIturn, ZeroPlay, legalHumMove;
			//objects
			player player;
			board board, board1, board2, board3, board4, board5, board6, board7, board8;
			/**odd numbered depths end on min nodes, even on max. This doesn't work. This is to check for that**/
			std::cout<<"depth = "<< depth<<". (This should be an even number)\n";
			std::cout<<"\n";

			player.wargamesReference();
			//Zero Player Game?
			ZeroPlay=board.setZpgame();
			if (right){
		        board.zpgame=true;
			}
			//Who is black, goes first?
			first=board.setColor();
			if (first == true) {
				AIturn = true;
			}
			else{
		        AIturn=false;
			}
			/**SETS BOARD UP**/
		    board.manualOverride();
		    //Starts the clock.
		    high_resolution_clock::time_point t1 = high_resolution_clock::now();
			while (true) {
		            //if all moves lose.

		        if(board.bval<-500){
		            std::cout<<"Game over, White loses";
		            break;
		                }
				if (AIturn) {
		            /**This should be refactored into a function.
		            *This initializes every board object to the same state, starts the clock on the move and
		            *makes the **/



		            high_resolution_clock::time_point tpre = high_resolution_clock::now();
		            board1=board;
		            board2=board;
		            board3=board;
		            board4=board;
		            board5=board;
		            board6=board;
		            board7=board;
		            board8=board;
		            //Initiates threads, calls them on the rows of the board
		            //Alpha and Beta NOT set to Min and Max at first call.  This has improved efficiency and reduced error.
		            //They ARE set to MAX and MIN later.
					thread th1( &board::threadKonane, &board1, 0, 1,2,depth,AIcolor);
					thread th2( &board::threadKonane, &board2, 1, 1,2,depth,AIcolor);
					thread th3( &board::threadKonane, &board3, 2, 1,2,depth,AIcolor);
					thread th4( &board::threadKonane, &board4, 3, 1,2,depth,AIcolor);
					thread th5( &board::threadKonane, &board5, 4, 1,2,depth,AIcolor);
					thread th6( &board::threadKonane, &board6, 5, 1,2,depth,AIcolor);
					thread th7( &board::threadKonane, &board7, 6, 1,2,depth,AIcolor);
					thread th8( &board::threadKonane, &board8, 7, 1,2,depth,AIcolor);

					//Joins threads to main program after program run (some efficiencies to realize here).
					th1.join();
					th2.join();
					th3.join();
					th4.join();
					th5.join();
					th6.join();
					th7.join();
					th8.join();
					//makes a comparison between the 8 boards and selects the ideal board from them
		            board = board.comparison(board1, board2, board3, board4, board5, board6, board7, board8);
		            //displays prior board
					board.display();
					//if no valid moves
		            if(board.bval<-500){
		                cout<<"Game Over, Black Loses";
		                break;
		                }

		            //Uses the "bestmove" array to make the move chosen by algorithim
		            board.makeMove(board.bestmove, AIcolor);
		            //displays the move in start i, start j, destination i, destination j, format.
		            board.displayMove();
		            //displays the board
					board.display();

					//Passes turn
					AIturn = false;
					//increments turn counter
					turn++;
					//stops clock and counts value
					high_resolution_clock::time_point tpost = high_resolution_clock::now();
					timeCount = duration_cast<duration<double>>(tpost-tpre);
		            tc=timeCount.count();
		            //gives amount of time taken
		            std::cout<<"\n"<<tc<<"\n";
		            //records time and turn to array
		            csv[turn-1]=tc;
		            }
		            /** if PLAYING AGAINST ITSELF OR A SIMILAR AI W A DIFFERENT SEF**/
		            //same as above
		            if((ZeroPlay) && (AIturn==false)){

		                high_resolution_clock::time_point tpre = high_resolution_clock::now();
		                board1=board;
		                board2=board;
		                board3=board;
		                board4=board;
		                board5=board;
		                board6=board;
		                board7=board;
		                board8=board;
		                thread th1( &board::threadKonane, &board1, 0, 1,2,depth,humanColor);
		                thread th2( &board::threadKonane, &board2, 1, 1,2,depth,humanColor);
		                thread th3( &board::threadKonane, &board3, 2, 1,2,depth,humanColor);
		                thread th4( &board::threadKonane, &board4, 3, 1,2,depth,humanColor);
		                thread th5( &board::threadKonane, &board5, 4, 1,2,depth,humanColor);
		                thread th6( &board::threadKonane, &board6, 5, 1,2,depth,humanColor);
		                thread th7( &board::threadKonane, &board7, 6, 1,2,depth,humanColor);
		                thread th8( &board::threadKonane, &board8, 7, 1,2,depth,humanColor);
		                th1.join();
		                th2.join();
		                th3.join();
		                th4.join();
		                th5.join();
		                th6.join();
		                th7.join();
		                th8.join();
		                board = board.comparison (board1, board2, board3, board4, board5, board6, board7, board8);
		                board.display();
		                //if no valid moves
		                if(board.bval<-500){
		                std::cout<<"Game over, White loses";
		                break;
		                }
		                board.makeMove(board.bestmove, humanColor);
		                board.displayMove();

		                board.display();


		                AIturn = true;
		                turn++;
		                //record timing.
		                high_resolution_clock::time_point tpost = high_resolution_clock::now();
		                timeCount = duration_cast<duration<double>>(tpost-tpre);
		                tc=timeCount.count();
		                std::cout<<"\n"<<tc<<"\n";
		                csv[turn-1]=tc;
		                }
		            /** if PLAYING A HUMAN**/
				if((!ZeroPlay) && (AIturn==false)) {
		            do{
		                std::cout << "\nenter piece to move column, 1-8: ";
		                //source column
		                std::cin >> j;
		                //accomodate indexing
		                j--;
		                //enters player move into array
		                board.bestmove[1]=j;
		                std::cout << "\nenter piece to move row, 1-8: ";
		                std::cin >> i;
		                i--;
		                //source row
		                board.bestmove[0]=i;
		                std::cout << "\nenter piece destination column, 1-8: ";
		                std::cin >> m;
		                m--;
		                //destination column
		                board.bestmove[3]=m;
		                std::cout << "\nenter piece destination row, 1-8: ";
		                std::cin >> k;
		                k--;
		                //destination row
		                board.bestmove[2]=k;
		                legalHumMove=board.guardRails();
		            }while(! legalHumMove);
		            //is this move legal?


					board.makeMove(board.bestmove,humanColor);
					board.displayMove();
					board.display();
					turn++;
					AIturn=true;
					}
		        std::cout<<  "\nassuming correct board and continue\n";
			}
			high_resolution_clock::time_point t2 = high_resolution_clock::now();
			 duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
			std::cout<<"finished in "<<turn<<" turns";
		    std::cout << "It took me " << time_span.count() << " seconds.\n";
		    for(z=0;z<turn;z++)
		        {std::cout<<"turn " <<z+1<< " took "<<csv[z]<<" seconds \n";}
		    //write_csv(csv, turn);
			return 0;
		}



	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
